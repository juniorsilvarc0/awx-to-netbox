---
- name: "🚀 AWX Simple Collector - Dados Essenciais para NetBox"
  hosts: localhost
  gather_facts: false
  
  tasks:
    - name: "🔐 Validar credentials AWX"
      debug:
        msg: |
          🔐 Validação de Credentials:
          👤 AWX Username: {{ lookup('env', 'AWX_USERNAME') | default('NÃO DEFINIDO') }}
          🔑 AWX Password: {{ 'DEFINIDO ✅' if lookup('env', 'AWX_PASSWORD') else 'NÃO DEFINIDO ❌' }}
          🔗 AWX URL: {{ awx_url | default('http://10.0.100.159:8013') }}
      failed_when: not lookup('env', 'AWX_USERNAME') or not lookup('env', 'AWX_PASSWORD')

    - name: "🔍 Testar conectividade com AWX"
      uri:
        url: "{{ awx_url | default('http://10.0.100.159:8013') }}/api/v2/"
        method: GET
        user: "{{ lookup('env', 'AWX_USERNAME') }}"
        password: "{{ lookup('env', 'AWX_PASSWORD') }}"
        force_basic_auth: true
        validate_certs: false
        return_content: true
      register: awx_connectivity
      failed_when: false

    - name: "❌ Falhar se não conseguir conectar"
      fail:
        msg: "Não foi possível conectar ao AWX. Verifique credenciais."
      when: awx_connectivity.status != 200

    - name: "📦 Buscar inventários disponíveis"
      uri:
        url: "{{ awx_url | default('http://10.0.100.159:8013') }}/api/v2/inventories/"
        method: GET
        user: "{{ lookup('env', 'AWX_USERNAME') }}"
        password: "{{ lookup('env', 'AWX_PASSWORD') }}"
        force_basic_auth: true
        validate_certs: false
        return_content: true
      register: awx_inventories

    - name: "🎯 Filtrar inventários alvo"
      set_fact:
        target_inventories: >-
          {{
            awx_inventories.json.results | 
            selectattr('name', 'in', (inventory_filter | default('VMware Inventory')).split(',') | map('trim')) | 
            list
          }}

    - name: "🖥️ Buscar hosts dos inventários selecionados"
      uri:
        url: "{{ awx_url | default('http://10.0.100.159:8013') }}/api/v2/inventories/{{ item.id }}/hosts/"
        method: GET
        user: "{{ lookup('env', 'AWX_USERNAME') }}"
        password: "{{ lookup('env', 'AWX_PASSWORD') }}"
        force_basic_auth: true
        validate_certs: false
        return_content: true
      register: inventory_hosts
      loop: "{{ target_inventories }}"
      loop_control:
        label: "{{ item.name }}"

    - name: "🖥️ Consolidar lista de hosts"
      set_fact:
        all_hosts: "{{ all_hosts | default([]) + item.json.results }}"
      loop: "{{ inventory_hosts.results }}"

    - name: "🔍 Aplicar filtro de hosts"
      set_fact:
        filtered_hosts: >-
          {{
            all_hosts | 
            selectattr('name', 'search', host_filter) | 
            list
          }}
      when: host_filter is defined and host_filter != ""

    - name: "🔍 Usar todos os hosts se não houver filtro"
      set_fact:
        filtered_hosts: "{{ all_hosts }}"
      when: host_filter is not defined or host_filter == ""

    - name: "🔍 Buscar detalhes completos dos hosts"
      uri:
        url: "{{ awx_url | default('http://10.0.100.159:8013') }}/api/v2/hosts/{{ item.id }}/"
        method: GET
        user: "{{ lookup('env', 'AWX_USERNAME') }}"
        password: "{{ lookup('env', 'AWX_PASSWORD') }}"
        force_basic_auth: true
        validate_certs: false
        return_content: true
      register: host_details
      loop: "{{ filtered_hosts }}"
      loop_control:
        label: "{{ item.name }}"

    - name: "📊 Processar dados essenciais para NetBox"
      set_fact:
        netbox_vms: "{{ netbox_vms | default([]) + [vm_data] }}"
      vars:
        host_detail: "{{ host_details.results[ansible_loop.index0].json }}"
        # Parse seguro das variáveis
        host_vars: "{{ (host_detail.variables | from_json) if (host_detail.variables and host_detail.variables != '') else {} }}"
        # Dados essenciais para NetBox
        vm_data:
          # Identificação
          name: "{{ host_detail.name }}"
          description: "{{ host_detail.description | default('Importado do AWX') }}"
          
          # Status (mapear power_state para status NetBox)
          status: "{{ 'active' if (host_vars.vm_power_state | default('')) == 'poweredOn' else 'offline' }}"
          
          # Recursos de Hardware
          vcpus: "{{ host_vars.vm_cpu_count | default(1) | int }}"
          memory_mb: "{{ (host_vars.vm_memory_gb | default(1) | float * 1024) | int }}"
          memory_gb: "{{ host_vars.vm_memory_gb | default(1) | float }}"
          disk_mb: "{{ host_vars.vm_disk_gb | default(host_vars.vm_memory_gb | default(20)) | float * 1024 | int }}"
          disk_gb: "{{ host_vars.vm_disk_gb | default(host_vars.vm_memory_gb | default(20)) | float }}"
          
          # Rede
          primary_ip4: "{{ host_vars.ansible_host | default('') }}"
          ip_addresses: "{{ host_vars.vm_ip_addresses | default([host_vars.ansible_host]) if host_vars.ansible_host else [] }}"
          
          # Localização/Organização
          cluster: "{{ host_vars.vm_cluster | default('Default Cluster') }}"
          datacenter: "{{ host_vars.vm_datacenter | default('Default Site') }}"
          
          # Sistema
          platform: "{{ host_vars.vm_guest_os | default('Unknown OS') }}"
          
          # Metadata AWX
          awx_id: "{{ host_detail.id }}"
          awx_enabled: "{{ host_detail.enabled }}"
          awx_inventory: "{{ inventory_filter | default('VMware Inventory') }}"
      loop: "{{ filtered_hosts }}"
      loop_control:
        extended: true
        label: "{{ item.name }}"
      failed_when: false

    - name: "📋 Exibir dados coletados (formato NetBox)"
      debug:
        msg: |
          ============================================================
          🖥️ VM: {{ item.name }}
          📊 Status: {{ item.status | upper }}
          💻 Hardware:
            - vCPUs: {{ item.vcpus }}
            - Memória: {{ item.memory_gb }}GB ({{ item.memory_mb }}MB)
            - Disco: {{ item.disk_gb }}GB ({{ item.disk_mb }}MB)
          🌐 Rede:
            - IP Primário: {{ item.primary_ip4 if item.primary_ip4 else 'N/A' }}
            - Todos os IPs: {{ item.ip_addresses | join(', ') if item.ip_addresses else 'N/A' }}
          🏢 Localização:
            - Cluster: {{ item.cluster }}
            - Datacenter: {{ item.datacenter }}
          💽 Sistema: {{ item.platform }}
          🔗 AWX ID: {{ item.awx_id }}
      loop: "{{ netbox_vms }}"
      when: show_details | default(true)

    - name: "📊 Resumo final - Dados para NetBox"
      debug:
        msg: |
          📊 Resumo Final - Dados Coletados para NetBox:
          ==========================================
          🖥️ Total de VMs processadas: {{ netbox_vms | length }}
          
          📋 VMs por Status:
          {% set active_vms = netbox_vms | selectattr('status', 'equalto', 'active') | list %}
          {% set offline_vms = netbox_vms | selectattr('status', 'equalto', 'offline') | list %}
          - Ativas: {{ active_vms | length }}
          - Offline: {{ offline_vms | length }}
          
          💻 Recursos Totais:
          - vCPUs Total: {{ netbox_vms | sum(attribute='vcpus') }}
          - Memória Total: {{ netbox_vms | sum(attribute='memory_gb') | round(1) }}GB
          - Disco Total: {{ netbox_vms | sum(attribute='disk_gb') | round(1) }}GB
          
          🏢 Datacenters:
          {% for dc in netbox_vms | map(attribute='datacenter') | unique %}
          - {{ dc }}: {{ netbox_vms | selectattr('datacenter', 'equalto', dc) | list | length }} VMs
          {% endfor %}
          
          ✅ Dados prontos para sincronização com NetBox!

    - name: "💾 Dados estruturados para NetBox (JSON simulado)"
      debug:
        var: netbox_vms
      when: show_json | default(false)

    - name: "🎯 Próximos passos"
      debug:
        msg: |
          🎯 Próximos Passos para NetBox:
          
          1. ✅ Coleta AWX concluída - {{ netbox_vms | length }} VMs
          2. 🔄 Configurar NetBox API
          3. 🗺️ Mapear Sites/Clusters no NetBox
          4. 🧪 Testar sincronização em dry-run
          5. 🚀 Executar sincronização real
          
          💡 Campos coletados (compatíveis com NetBox):
          - Nome, Status, vCPUs, Memória, Disco
          - IP Primário, Platform, Cluster, Site
          - Metadados AWX para rastreamento