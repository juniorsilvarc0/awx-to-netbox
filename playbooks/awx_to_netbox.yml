---
- name: Executar sincroniza√ß√£o AWX ‚Üí NetBox via script Python
  hosts: localhost
  gather_facts: false

  tasks:
    - name: Verificar diret√≥rio de trabalho
      ansible.builtin.shell: |
        echo "üìÇ Diret√≥rio atual: $(pwd)"
        echo "üìã Conte√∫do do diret√≥rio:"
        ls -la
        echo ""
        echo "üìÇ Subindo para o diret√≥rio projeto:"
        cd ..
        echo "üìÇ Diret√≥rio projeto: $(pwd)"
        ls -la
        echo ""
        echo "üîç Verificando se script existe:"
        ls -la scripts/awx-netbox.py || echo "‚ùå Script n√£o encontrado!"
        echo ""
        echo "üêç Verificando Python:"
        python3 --version
        echo ""
        echo "üîç Verificando vari√°veis de ambiente..."
        echo "AWX_USERNAME: '${AWX_USERNAME:-N√ÉO_DEFINIDO}'"
        echo "AWX_PASSWORD: '${AWX_PASSWORD:+DEFINIDO}'"
        echo "NETBOX_API: '${NETBOX_API:-N√ÉO_DEFINIDO}'"
        echo "NETBOX_URL: '${NETBOX_URL:-N√ÉO_DEFINIDO}'"
        echo "NETBOX_TOKEN: '${NETBOX_TOKEN:+DEFINIDO}'"
        echo ""
        echo "üîç Debug detalhado da URL:"
        echo "Tamanho da NETBOX_API: ${#NETBOX_API}"
        echo "NETBOX_API em hex: $(echo -n "$NETBOX_API" | xxd -p -c 256)"
        echo "Todas as vari√°veis que come√ßam com NETBOX:"
        env | grep -E '^NETBOX' || echo "Nenhuma encontrada"
        echo ""
        echo "üîç Testando conectividade:"
        if [ -n "$NETBOX_API" ]; then
          echo "Tentando curl para: $NETBOX_API"
          curl -I "$NETBOX_API" --connect-timeout 5 || echo "Falha na conex√£o"
        fi
      args:
        chdir: "{{ ansible_env.ANSIBLE_PROJECT_DIR | default('.') }}"
      register: debug_result

    - name: Mostrar debug
      debug:
        var: debug_result.stdout_lines

    - name: Executar script Python
      ansible.builtin.shell: |
        echo "üöÄ Executando script Python..."
        cd ..
        python3 -u scripts/awx-netbox.py
      args:
        chdir: "{{ ansible_env.ANSIBLE_PROJECT_DIR | default('.') }}"
      register: script_result
      failed_when: false

    - name: Mostrar resultado do script
      debug:
        msg: |
          Return code: {{ script_result.rc }}
          STDOUT: {{ script_result.stdout }}
          STDERR: {{ script_result.stderr }}
